name: ci/github-actions
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - name: flake8 linting
        run: |
          pip install flake8
          export PATH="/home/runner/.local/bin:${PATH}"
          git fetch origin main
          # `|| true` to force exit code 0 even if no files found
          CHANGED_PYFILES=$(git diff --name-only --diff-filter AM origin/main ecephys_etl_pipelines | grep -e ".*.py$" || true)
          echo "List of changed files:"
          echo ${CHANGED_PYFILES}
          flake8 ${CHANGED_PYFILES} --count
  
  ecephys_etl_pipelines:
    runs-on: "ubuntu-latest"
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: alleninstitutepika
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker Image
        run: |
          git clone https://github.com/AllenInstitute/ecephys_etl_pipelines.git
          cd ecephys_etl_pipelines
          echo "Using branch $GITHUB_HEAD_REF"
          git checkout $GITHUB_HEAD_REF
          docker build --build-arg ECEPHYS_ETL_TAG=${GITHUB_HEAD_REF} --build-arg ECEPHYS_ETL_COMMIT_SHA=${GITHUB_SHA} --tag alleninstitutepika/ecephys_etl_pipelines:$GITHUB_SHA docker/
      - name: Run Tests in Docker Image
        run: |
          set -e
          docker run --entrypoint /bin/bash --read-only --tmpfs /tmp alleninstitutepika/ecephys_etl_pipelines:$GITHUB_SHA /repos/ecephys_etl/.github/scripts/general_container_test.sh
      - name: Push Docker Image
        run: |
            if [[ "$GITHUB_HEAD_REF" == "main" ]]
            then
                docker tag alleninstitutepika/ecephys_etl_pipelines:$GITHUB_SHA alleninstitutepika/ecephys_etl_pipelines:main
            else
                docker tag alleninstitutepika/ecephys_etl_pipelines:$GITHUB_SHA alleninstitutepika/ecephys_etl_pipelines:develop
            fi

            docker push -a alleninstitutepika/ecephys_etl_pipelines